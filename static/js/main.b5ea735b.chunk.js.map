{"version":3,"sources":["utils/Keyboard.ts","hooks/useGlobalKeyboardShortcut.ts","hooks/useGlobalKeyboard.ts","hooks/useTypedSelector.ts","redux/actions.ts","redux/selectors.ts","utils/noop.ts","components/atoms/Button.tsx","components/atoms/TextInput.tsx","components/organisms/AppLayout.tsx","constants.ts","components/pages/HomePage.tsx","redux/reducer.ts","types/ReduxType.ts","firebase.ts","types/NoteType.ts","utils/generateId.ts","utils/getCurrentTime.ts","redux/saga.ts","app.tsx","redux/store.ts"],"names":["KeyCode","useGlobalKeyboardShortcut","dispatch","onAdd","onSave","onKeyDown","useEffect","element","document","body","handleKeyDown","event","target","addEventListener","removeEventListener","useGlobalKeyboard","useCallback","code","KEY_A","BACKSPACE","ESCAPE","ctrlKey","metaKey","KEY_S","preventDefault","ActionType","useTypedSelector","useSelector","actions","NOTE_ADD_REQUEST","text","type","payload","NOTE_ADD_SUCCESS","note","NOTE_REMOVE","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","user","USER_LOGOUT_REQUEST","USER_LOGOUT_SUCCESS","NOTE_GET_ALL_REQUEST","NOTE_GET_ALL_SUCCESS","notes","selectors","state","noop","Button","className","children","disabled","onClick","classNames","TextInput","props","AppLayout","HomePage","useDispatch","handleLogin","handleNoteAdd","displayName","id","onSubmit","NoteAdd","useState","setText","handleChange","newText","currentTarget","value","handleSubmit","onChange","NoteList","map","key","NoteView","createdAt","useMemo","timestamp","date","Date","year","getFullYear","month","getMonth","d","getDate","h","getHours","m","getMinutes","pad2","formatTime","n","reducer","initialState","handler","defaultReducer","action","undefined","createReducer","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createNote","authorId","generate","now","userLoginSaga","userLogoutSaga","watchUserStatusChangeSaga","noteAddSaga","noteGetAllSaga","saga","emptyUser","_","onAuthStateChanged","eventChannel","emitter","auth","provider","GoogleAuthProvider","call","signInWithRedirect","signOut","toUser","uid","chan","take","rawUser","put","cancelled","close","select","db","firestore","notesRef","collection","add","where","get","snapshot","getAll","all","takeLatest","fork","result","forEach","doc","push","data","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createReduxStore","applyMiddleware","run","createStore","rootElement","getElementById","ReactDOM","render","main"],"mappings":"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","file":"static/js/main.b5ea735b.chunk.js","sourcesContent":["export enum KeyCode {\n  BACKSPACE = 'Backspace',\n  ENTER = 'Enter',\n  ESCAPE = 'Escape',\n  KEY_A = 'KeyA',\n  KEY_D = 'KeyD',\n  KEY_R = 'KeyR',\n  KEY_S = 'KeyS',\n  KEY_W = 'KeyW',\n}\n","import { useCallback } from 'react';\nimport { Dispatch } from '../types/ReduxType';\nimport { KeyCode } from '../utils/Keyboard';\nimport { useGlobalKeyboard } from './useGlobalKeyboard';\n\ninterface Options {\n  dispatch: Dispatch;\n  onAdd: () => void;\n  onSave: () => void;\n}\n\nexport function useGlobalKeyboardShortcut({ dispatch, onAdd, onSave }: Options) {\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.code === KeyCode.KEY_A) {\n        onAdd();\n      } else if (event.code === KeyCode.BACKSPACE) {\n        // dispatch(actions.NOTE_ADD());\n      } else if (event.code === KeyCode.ESCAPE) {\n        // dispatch(actions.NOTE_DESELECT());\n      } else if ((event.ctrlKey || event.metaKey) && event.code === KeyCode.KEY_S) {\n        onSave();\n      } else {\n        return;\n      }\n      event.preventDefault();\n    },\n    [dispatch, onAdd, onSave],\n  );\n\n  useGlobalKeyboard({ onKeyDown });\n}\n","import { useEffect } from 'react';\n\ninterface Options {\n  onKeyDown: (event: KeyboardEvent) => void;\n}\n\nexport function useGlobalKeyboard({ onKeyDown }: Options): void {\n  useEffect(() => {\n    const element = document.body;\n\n    function handleKeyDown(event: KeyboardEvent): void {\n      // Call onKeyDown only when no elements are focused\n      if (event.target === element) {\n        onKeyDown(event);\n      }\n    }\n\n    element.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      element.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onKeyDown]);\n}\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { State } from '../types/StateType';\n\nexport const useTypedSelector: TypedUseSelectorHook<State> = useSelector;\n","import { ReturnTypes } from '../types/CommonType';\nimport { Note } from '../types/NoteType';\nimport { createActionCreators } from '../types/ReduxType';\nimport { User } from '../types/UserType';\n\nexport enum ActionType {\n  USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST',\n  USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS',\n  USER_LOGOUT_REQUEST = 'USER_LOGOUT_REQUEST',\n  USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS',\n  NOTE_GET_ALL_REQUEST = 'NOTE_GET_ALL_REQUEST',\n  NOTE_GET_ALL_SUCCESS = 'NOTE_GET_ALL_SUCCESS',\n  NOTE_ADD_REQUEST = 'NOTE_ADD_REQUEST',\n  NOTE_ADD_SUCCESS = 'NOTE_ADD_SUCCESS',\n  NOTE_REMOVE = 'NOTE_REMOVE',\n}\n\nexport const actions = createActionCreators<ActionType>()({\n  NOTE_ADD_REQUEST: (text: string) => ({ type: ActionType.NOTE_ADD_REQUEST, payload: { text } }),\n  NOTE_ADD_SUCCESS: (note: Note) => ({ type: ActionType.NOTE_ADD_SUCCESS, payload: { note } }),\n  NOTE_REMOVE: () => ({ type: ActionType.NOTE_REMOVE }),\n  USER_LOGIN_REQUEST: () => ({ type: ActionType.USER_LOGIN_REQUEST }),\n  USER_LOGIN_SUCCESS: (user: User) => ({ type: ActionType.USER_LOGIN_SUCCESS, payload: { user } }),\n  USER_LOGOUT_REQUEST: () => ({ type: ActionType.USER_LOGOUT_REQUEST }),\n  USER_LOGOUT_SUCCESS: () => ({ type: ActionType.USER_LOGOUT_SUCCESS }),\n  NOTE_GET_ALL_REQUEST: () => ({ type: ActionType.NOTE_GET_ALL_REQUEST }),\n  NOTE_GET_ALL_SUCCESS: (notes: Note[]) => ({\n    type: ActionType.NOTE_GET_ALL_SUCCESS,\n    payload: { notes },\n  }),\n});\n\nexport type Action = ReturnTypes<typeof actions>;\n","import { State } from '../types/StateType';\n\nexport const selectors = {\n  user: (state: State) => state.user,\n  notes: (state: State) => state.notes,\n};\n","export function noop() {}\n","import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  disabled?: boolean;\n  onClick: (event: React.MouseEvent) => void;\n}\n\nexport const Button: React.FunctionComponent<Props> = ({\n  className,\n  children,\n  disabled,\n  onClick,\n}) => {\n  return (\n    <button className={classNames('Button', className)} disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n","import classNames from 'classnames';\nimport React, { HTMLProps } from 'react';\n\ninterface Props extends HTMLProps<HTMLInputElement> {\n  className?: string;\n}\n\nexport const TextInput: React.FunctionComponent<Props> = ({ className, children, ...props }) => {\n  return (\n    <input {...props} className={classNames('TextInput', className)}>\n      {children}\n    </input>\n  );\n};\n","import React from 'react';\nimport { APP_NAME } from '../../constants';\n\ninterface Props {}\n\nexport const AppLayout: React.FunctionComponent<Props> = ({ children }) => {\n  return (\n    <div className=\"AppLayout\">\n      <header className=\"AppLayout__header\">{APP_NAME}</header>\n      <main className=\"AppLayout__content\">{children}</main>\n    </div>\n  );\n};\n","export const APP_NAME = 'Memo';\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useGlobalKeyboardShortcut } from '../../hooks/useGlobalKeyboardShortcut';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { actions } from '../../redux/actions';\nimport { selectors } from '../../redux/selectors';\nimport { Note } from '../../types/NoteType';\nimport { noop } from '../../utils/noop';\nimport { Button } from '../atoms/Button';\nimport { TextInput } from '../atoms/TextInput';\nimport { AppLayout } from '../organisms/AppLayout';\n\ninterface Props {}\n\nexport const HomePage: React.FunctionComponent<Props> = () => {\n  const dispatch = useDispatch();\n\n  const user = useTypedSelector(selectors.user);\n  const notes = useTypedSelector(selectors.notes);\n\n  const handleLogin = useCallback(() => {\n    dispatch(actions.USER_LOGIN_REQUEST());\n  }, [dispatch]);\n\n  const handleNoteAdd = useCallback(\n    (text: string) => {\n      dispatch(actions.NOTE_ADD_REQUEST(text));\n    },\n    [dispatch],\n  );\n\n  useGlobalKeyboardShortcut({\n    dispatch,\n    onAdd: noop,\n    onSave: noop,\n  });\n\n  if (user === null) {\n    return (\n      <AppLayout>\n        <Button onClick={handleLogin}>Login</Button>\n      </AppLayout>\n    );\n  }\n\n  return (\n    <AppLayout>\n      <p>{user.displayName ? `Hello, ${user.id}!` : 'Hello'}</p>\n      <NoteList notes={notes} />\n      <NoteAdd onSubmit={handleNoteAdd} />\n    </AppLayout>\n  );\n};\n\nconst NoteAdd: React.FunctionComponent<{ onSubmit: (text: string) => void }> = ({ onSubmit }) => {\n  const [text, setText] = useState('');\n\n  const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n    const newText = event.currentTarget.value;\n    setText(newText);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(text);\n    setText('');\n  }, [text, onSubmit]);\n\n  const disabled = text === '';\n\n  return (\n    <div>\n      <TextInput value={text} onChange={handleChange} />\n      <Button className=\"HomePage__note-add\" disabled={disabled} onClick={handleSubmit}>\n        Add\n      </Button>\n    </div>\n  );\n};\n\nconst NoteList: React.FunctionComponent<{ notes: Note[] }> = ({ notes }) => {\n  return (\n    <div className=\"NoteList\">\n      {notes.map(note => {\n        return <NoteView key={note.id} note={note} />;\n      })}\n    </div>\n  );\n};\n\nconst NoteView: React.FunctionComponent<{ note: Note }> = ({ note }) => {\n  const createdAt = useMemo(() => formatTime(note.createdAt), [note]);\n\n  return (\n    <div className=\"NoteView\">\n      <p className=\"NoteView-text\">{note.text}</p>\n      <p className=\"NoteView-created-at\">{createdAt}</p>\n    </div>\n  );\n};\n\nfunction formatTime(timestamp: number): string {\n  const date = new Date(timestamp);\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const d = date.getDate();\n  const h = date.getHours();\n  const m = date.getMinutes();\n  return `${year}-${pad2(month)}-${pad2(d)} ${pad2(h)}:${pad2(m)}`;\n}\n\nfunction pad2(n: number): string {\n  return n < 10 ? `0${n}` : `${n}`;\n}\n","import { ValueOf } from '../types/CommonType';\nimport { createReducer } from '../types/ReduxType';\nimport { State } from '../types/StateType';\nimport { Action, ActionType } from './actions';\n\nconst initialState: State = {\n  user: null,\n  notes: [],\n};\n\nexport const reducer = createReducer<State, ActionType, ValueOf<Action>>(initialState, {\n  [ActionType.USER_LOGIN_SUCCESS](state, { payload: { user } }) {\n    return { ...state, user };\n  },\n  [ActionType.USER_LOGOUT_SUCCESS](state) {\n    return { ...state, user: null };\n  },\n\n  [ActionType.NOTE_GET_ALL_SUCCESS](state, { payload: { notes } }) {\n    return { ...state, notes };\n  },\n  [ActionType.NOTE_ADD_SUCCESS](state, { payload: { note } }) {\n    return { ...state, notes: [...state.notes, note] };\n  },\n});\n","import { AnyAction } from 'redux';\n\nexport type Action<Type extends string, Payload = void> = Payload extends void\n  ? { type: Type }\n  : { type: Type; payload: Payload };\n\nexport type Reducer<State, TAction extends Action<any, any>> = (\n  state: State,\n  action: TAction,\n) => State;\n\nexport type ReducerWithInitialState<State, TAction extends Action<any, any>> = (\n  state: State | undefined,\n  action: TAction,\n) => State;\n\ntype ReducerHandler<TState, TType extends string, TAction extends { type: TType }> = {\n  [Type in TType]?: TAction extends { type: Type } ? Reducer<TState, TAction> : never;\n};\nexport function createReducer<TState, TType extends string, TAction extends { type: TType }>(\n  initialState: TState,\n  handler: ReducerHandler<TState, TType, TAction>,\n  defaultReducer: ReducerWithInitialState<TState, TAction> = (state = initialState) => state,\n): ReducerWithInitialState<TState, TAction> {\n  const reducer: ReducerWithInitialState<TState, TAction> = (state = initialState, action) => {\n    const h = handler[action.type];\n    return h !== undefined ? h(state, action) : defaultReducer(state, action);\n  };\n  return reducer;\n}\n\nexport type Dispatch = (arg: AnyAction | ((...args: any[]) => unknown)) => any;\n\nexport type Selector<State, SelectedState> = (state: State) => SelectedState;\n\ntype ActionCreatorLike<ActionType> = (...args: any[]) => { type: ActionType; payload?: unknown };\ninterface ActionCreatorsLike<ActionType> {\n  [key: string]: ActionCreatorLike<ActionType>;\n}\nexport function createActionCreators<ActionType>() {\n  return <ActionCreators extends ActionCreatorsLike<ActionType>>(\n    v: ActionCreators,\n  ): ActionCreators => {\n    return v;\n  };\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: 'counter-64673.firebaseapp.com',\n  databaseURL: 'https://counter-64673.firebaseio.com',\n  projectId: 'counter-64673',\n  storageBucket: 'counter-64673.appspot.com',\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: '1:61000756567:web:5d923c067f28d0ab8c6212',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport { firebase };\n","import { generateId } from '../utils/generateId';\nimport { getCurrentTime } from '../utils/getCurrentTime';\n\nexport interface Note {\n  id: string;\n  text: string;\n  authorId: string;\n  createdAt: number;\n}\n\nexport function createNote(authorId: string, text: string): Note {\n  return {\n    id: generateId(),\n    text,\n    authorId,\n    createdAt: getCurrentTime(),\n  };\n}\n","import { generate } from 'shortid';\n\nexport function generateId(): string {\n  return generate();\n}\n","export function getCurrentTime(): number {\n  return Date.now();\n}\n","import { eventChannel, EventChannel, SagaIterator } from 'redux-saga';\nimport {\n  all,\n  call,\n  CallEffect,\n  cancelled,\n  fork,\n  put,\n  select,\n  take,\n  takeLatest,\n} from 'redux-saga/effects';\nimport { firebase } from '../firebase';\nimport { createNote, Note } from '../types/NoteType';\nimport { User } from '../types/UserType';\nimport { Action, actions, ActionType } from './actions';\nimport { selectors } from './selectors';\n\ntype EmptyUser = { _: 'EmptyUser' };\n\nconst emptyUser: EmptyUser = { _: 'EmptyUser' };\n\nfunction onAuthStateChanged(): EventChannel<firebase.User | EmptyUser> {\n  return eventChannel(emitter => {\n    return firebase.auth().onAuthStateChanged(user => {\n      emitter(user || emptyUser);\n    });\n  });\n}\n\nfunction onAuthStateChangedEffect(): CallEffect<EventChannel<firebase.User | EmptyUser>> {\n  return call(onAuthStateChanged);\n}\n\nfunction* userLoginSaga(): SagaIterator {\n  const provider = new firebase.auth.GoogleAuthProvider();\n  const auth = firebase.auth();\n  yield call([auth, auth.signInWithRedirect], provider);\n}\n\nfunction* userLogoutSaga(): SagaIterator {\n  const auth = firebase.auth();\n  yield call([auth, auth.signOut]);\n}\n\nfunction toUser(user: firebase.User): User {\n  return { id: user.uid, displayName: user.displayName };\n}\n\nfunction* watchUserStatusChangeSaga(): SagaIterator {\n  const chan = yield onAuthStateChangedEffect();\n  try {\n    while (true) {\n      const rawUser = yield take(chan);\n      if (rawUser !== emptyUser) {\n        const user = toUser(rawUser);\n        yield put(actions.USER_LOGIN_SUCCESS(user));\n        yield put(actions.NOTE_GET_ALL_REQUEST());\n      } else {\n        yield put(actions.USER_LOGOUT_SUCCESS());\n      }\n    }\n  } finally {\n    if (yield cancelled()) {\n      chan.close();\n    }\n  }\n}\n\nfunction* noteAddSaga({\n  payload: { text },\n}: Action[ActionType.NOTE_ADD_REQUEST]): SagaIterator<void> {\n  const user: User | null = yield select(selectors.user);\n  if (user === null) {\n    return;\n  }\n\n  const note = createNote(user.id, text);\n\n  const db = firebase.firestore();\n  const notesRef = db.collection('notes');\n  yield call([notesRef, notesRef.add], note);\n  yield put(actions.NOTE_ADD_SUCCESS(note));\n}\n\nfunction* noteGetAllSaga(_: Action[ActionType.NOTE_GET_ALL_REQUEST]): SagaIterator<void> {\n  const user: User | null = yield select(selectors.user);\n  if (user === null) {\n    return;\n  }\n\n  const db = firebase.firestore();\n  const notesRef = db.collection('notes').where('authorId', '==', user.id);\n  const snapshot: firebase.firestore.QuerySnapshot = yield call([notesRef, notesRef.get]);\n  const notes = getAll<Note>(snapshot);\n  yield put(actions.NOTE_GET_ALL_SUCCESS(notes));\n}\n\nexport function* saga(): SagaIterator {\n  yield all([\n    takeLatest(ActionType.USER_LOGIN_REQUEST, userLoginSaga),\n    takeLatest(ActionType.USER_LOGOUT_REQUEST, userLogoutSaga),\n    takeLatest(ActionType.NOTE_GET_ALL_REQUEST, noteGetAllSaga),\n    takeLatest(ActionType.NOTE_ADD_REQUEST, noteAddSaga),\n    fork(watchUserStatusChangeSaga),\n  ]);\n}\n\nfunction getAll<T>(snapshot: firebase.firestore.QuerySnapshot): T[] {\n  const result: T[] = [];\n  snapshot.forEach(doc => {\n    result.push(doc.data() as T);\n    return result;\n  });\n  return result;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HomePage } from './components/pages/HomePage';\nimport { createStore } from './redux/store';\n\nfunction main() {\n  const store = createStore();\n\n  const rootElement = document.getElementById('root');\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <HomePage />\n    </Provider>,\n    rootElement,\n  );\n}\n\nmain();\n","import { applyMiddleware, compose, createStore as createReduxStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { reducer } from './reducer';\nimport { saga } from './saga';\n\nexport function createStore() {\n  const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createReduxStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\n  sagaMiddleware.run(saga);\n\n  return store;\n}\n"],"sourceRoot":""}