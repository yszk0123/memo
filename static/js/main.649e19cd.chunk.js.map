{"version":3,"sources":["utils/Keyboard.ts","hooks/useGlobalKeyboardShortcut.ts","hooks/useGlobalKeyboard.ts","hooks/useTypedSelector.ts","redux/actions.ts","redux/selectors.ts","utils/noop.ts","components/pages/HomePage.tsx","components/atoms/Button.tsx","components/atoms/List.tsx","components/atoms/ListItem.tsx","components/atoms/TextArea.tsx","components/atoms/Paper.tsx","components/molecules/Dialog.tsx","components/organisms/AppLayout.tsx","constants.ts","redux/reducer.ts","types/ReduxType.ts","firebase.ts","types/NoteType.ts","utils/getCurrentPositionFromGeoLocation.ts","utils/getCurrentTime.ts","redux/saga.ts","app.tsx","redux/store.ts"],"names":["KeyCode","useGlobalKeyboardShortcut","dispatch","onAdd","onSave","onKeyDown","useEffect","element","document","body","handleKeyDown","event","target","addEventListener","removeEventListener","useGlobalKeyboard","useCallback","code","KEY_A","BACKSPACE","ESCAPE","ctrlKey","metaKey","KEY_S","preventDefault","ActionType","useTypedSelector","useSelector","actions","NOTE_ADD_REQUEST","text","type","payload","NOTE_ADD_SUCCESS","note","NOTE_REMOVE_REQUEST","noteId","NOTE_REMOVE_SUCCESS","NOTE_UPDATE_REQUEST","NOTE_UPDATE_SUCCESS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","user","USER_LOGOUT_REQUEST","USER_LOGOUT_SUCCESS","NOTE_GET_ALL_REQUEST","NOTE_GET_ALL_SUCCESS","notes","selectors","state","noop","DialogType","Button","className","children","disabled","onClick","classNames","DefaultButton","props","PrimaryButton","SecondaryButton","List","ListItem","TextArea","Paper","DialogContent","DialogActions","Dialog","ReactDOM","createPortal","AppLayout","displayName","HomePage","useDispatch","useState","NONE","dialogType","setDialogType","currentNote","setCurrentNote","handleLogin","handleNoteAdd","handleNoteUpdate","id","handleOpenAdd","ADD","handleOpenUpdate","UPDATE","handleCancel","handleNoteRemove","onRemove","initialText","onSubmit","onCancel","NoteAddDialog","setText","handleChange","newText","currentTarget","value","handleSubmit","onChange","NoteList","map","key","NoteView","createdAt","useMemo","timestamp","date","Date","year","getFullYear","month","getMonth","d","getDate","h","getHours","m","getMinutes","pad2","formatTime","handleClick","handleRemove","stopPropagation","n","reducer","initialState","handler","defaultReducer","action","undefined","createReducer","old","filter","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createNote","doc","authorId","a","coordinate","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","now","userLoginSaga","userLogoutSaga","watchUserStatusChangeSaga","noteAddSaga","noteUpdateSaga","noteRemoveSaga","noteGetAllSaga","saga","emptyUser","_","onAuthStateChanged","eventChannel","emitter","auth","provider","GoogleAuthProvider","call","signInWithRedirect","signOut","toUser","uid","chan","take","rawUser","put","cancelled","close","select","db","firestore","noteRef","collection","set","update","get","newNoteRef","data","newNote","delete","notesRef","where","orderBy","snapshot","getAll","all","takeLatest","takeEvery","fork","result","forEach","push","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createReduxStore","applyMiddleware","run","createStore","rootElement","getElementById","render","main"],"mappings":"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","file":"static/js/main.649e19cd.chunk.js","sourcesContent":["export enum KeyCode {\n  BACKSPACE = 'Backspace',\n  ENTER = 'Enter',\n  ESCAPE = 'Escape',\n  KEY_A = 'KeyA',\n  KEY_D = 'KeyD',\n  KEY_R = 'KeyR',\n  KEY_S = 'KeyS',\n  KEY_W = 'KeyW',\n}\n","import { useCallback } from 'react';\nimport { Dispatch } from '../types/ReduxType';\nimport { KeyCode } from '../utils/Keyboard';\nimport { useGlobalKeyboard } from './useGlobalKeyboard';\n\ninterface Options {\n  dispatch: Dispatch;\n  onAdd: () => void;\n  onSave: () => void;\n}\n\nexport function useGlobalKeyboardShortcut({ dispatch, onAdd, onSave }: Options) {\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.code === KeyCode.KEY_A) {\n        onAdd();\n      } else if (event.code === KeyCode.BACKSPACE) {\n        // dispatch(actions.NOTE_ADD());\n      } else if (event.code === KeyCode.ESCAPE) {\n        // dispatch(actions.NOTE_DESELECT());\n      } else if ((event.ctrlKey || event.metaKey) && event.code === KeyCode.KEY_S) {\n        onSave();\n      } else {\n        return;\n      }\n      event.preventDefault();\n    },\n    [dispatch, onAdd, onSave],\n  );\n\n  useGlobalKeyboard({ onKeyDown });\n}\n","import { useEffect } from 'react';\n\ninterface Options {\n  onKeyDown: (event: KeyboardEvent) => void;\n}\n\nexport function useGlobalKeyboard({ onKeyDown }: Options): void {\n  useEffect(() => {\n    const element = document.body;\n\n    function handleKeyDown(event: KeyboardEvent): void {\n      // Call onKeyDown only when no elements are focused\n      if (event.target === element) {\n        onKeyDown(event);\n      }\n    }\n\n    element.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      element.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onKeyDown]);\n}\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { State } from '../types/StateType';\n\nexport const useTypedSelector: TypedUseSelectorHook<State> = useSelector;\n","import { ReturnTypes } from '../types/CommonType';\nimport { Note } from '../types/NoteType';\nimport { createActionCreators } from '../types/ReduxType';\nimport { User } from '../types/UserType';\n\nexport enum ActionType {\n  USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST',\n  USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS',\n  USER_LOGOUT_REQUEST = 'USER_LOGOUT_REQUEST',\n  USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS',\n  NOTE_REMOVE_REQUEST = 'NOTE_REMOVE_REQUEST',\n  NOTE_REMOVE_SUCCESS = 'NOTE_REMOVE_SUCCESS',\n  NOTE_UPDATE_REQUEST = 'NOTE_UPDATE_REQUEST',\n  NOTE_UPDATE_SUCCESS = 'NOTE_UPDATE_SUCCESS',\n  NOTE_GET_ALL_REQUEST = 'NOTE_GET_ALL_REQUEST',\n  NOTE_GET_ALL_SUCCESS = 'NOTE_GET_ALL_SUCCESS',\n  NOTE_ADD_REQUEST = 'NOTE_ADD_REQUEST',\n  NOTE_ADD_SUCCESS = 'NOTE_ADD_SUCCESS',\n}\n\nexport const actions = createActionCreators<ActionType>()({\n  NOTE_ADD_REQUEST: (text: string) => ({ type: ActionType.NOTE_ADD_REQUEST, payload: { text } }),\n  NOTE_ADD_SUCCESS: (note: Note) => ({ type: ActionType.NOTE_ADD_SUCCESS, payload: { note } }),\n  NOTE_REMOVE_REQUEST: (noteId: string) => ({\n    type: ActionType.NOTE_REMOVE_REQUEST,\n    payload: { noteId },\n  }),\n  NOTE_REMOVE_SUCCESS: (noteId: string) => ({\n    type: ActionType.NOTE_REMOVE_SUCCESS,\n    payload: { noteId },\n  }),\n  NOTE_UPDATE_REQUEST: (noteId: string, text: string) => ({\n    type: ActionType.NOTE_UPDATE_REQUEST,\n    payload: { noteId, text },\n  }),\n  NOTE_UPDATE_SUCCESS: (note: Note) => ({\n    type: ActionType.NOTE_UPDATE_SUCCESS,\n    payload: { note },\n  }),\n  USER_LOGIN_REQUEST: () => ({ type: ActionType.USER_LOGIN_REQUEST }),\n  USER_LOGIN_SUCCESS: (user: User) => ({ type: ActionType.USER_LOGIN_SUCCESS, payload: { user } }),\n  USER_LOGOUT_REQUEST: () => ({ type: ActionType.USER_LOGOUT_REQUEST }),\n  USER_LOGOUT_SUCCESS: () => ({ type: ActionType.USER_LOGOUT_SUCCESS }),\n  NOTE_GET_ALL_REQUEST: () => ({ type: ActionType.NOTE_GET_ALL_REQUEST }),\n  NOTE_GET_ALL_SUCCESS: (notes: Note[]) => ({\n    type: ActionType.NOTE_GET_ALL_SUCCESS,\n    payload: { notes },\n  }),\n});\n\nexport type Action = ReturnTypes<typeof actions>;\n","import { State } from '../types/StateType';\n\nexport const selectors = {\n  user: (state: State) => state.user,\n  notes: (state: State) => state.notes,\n};\n","export function noop() {}\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useGlobalKeyboardShortcut } from '../../hooks/useGlobalKeyboardShortcut';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { actions } from '../../redux/actions';\nimport { selectors } from '../../redux/selectors';\nimport { Note } from '../../types/NoteType';\nimport { noop } from '../../utils/noop';\nimport { DefaultButton, PrimaryButton, SecondaryButton } from '../atoms/Button';\nimport { List } from '../atoms/List';\nimport { ListItem } from '../atoms/ListItem';\nimport { TextArea } from '../atoms/TextArea';\nimport { Dialog, DialogActions, DialogContent } from '../molecules/Dialog';\nimport { AppLayout } from '../organisms/AppLayout';\n\ninterface Props {}\n\nenum DialogType {\n  NONE,\n  ADD,\n  UPDATE,\n}\n\nexport const HomePage: React.FunctionComponent<Props> = () => {\n  const dispatch = useDispatch();\n  const [dialogType, setDialogType] = useState(DialogType.NONE);\n  const [currentNote, setCurrentNote] = useState<Note | null>(null);\n\n  const user = useTypedSelector(selectors.user);\n  const notes = useTypedSelector(selectors.notes);\n\n  const handleLogin = useCallback(() => {\n    dispatch(actions.USER_LOGIN_REQUEST());\n  }, [dispatch]);\n\n  const handleNoteAdd = useCallback(\n    (text: string) => {\n      dispatch(actions.NOTE_ADD_REQUEST(text));\n      setDialogType(DialogType.NONE);\n    },\n    [dispatch],\n  );\n\n  const handleNoteUpdate = useCallback(\n    (text: string) => {\n      if (currentNote) {\n        dispatch(actions.NOTE_UPDATE_REQUEST(currentNote.id, text));\n        setDialogType(DialogType.NONE);\n      }\n    },\n    [dispatch, currentNote],\n  );\n\n  const handleOpenAdd = useCallback(() => {\n    setDialogType(DialogType.ADD);\n  }, []);\n\n  const handleOpenUpdate = useCallback((note: Note) => {\n    setDialogType(DialogType.UPDATE);\n    setCurrentNote(note);\n  }, []);\n\n  const handleCancel = useCallback(() => {\n    setDialogType(DialogType.NONE);\n  }, []);\n\n  const handleNoteRemove = useCallback(\n    (noteId: string) => {\n      dispatch(actions.NOTE_REMOVE_REQUEST(noteId));\n    },\n    [dispatch],\n  );\n\n  useGlobalKeyboardShortcut({\n    dispatch,\n    onAdd: noop,\n    onSave: noop,\n  });\n\n  if (user === null) {\n    return (\n      <AppLayout user={null}>\n        <PrimaryButton onClick={handleLogin}>Login</PrimaryButton>\n      </AppLayout>\n    );\n  }\n\n  return (\n    <AppLayout user={user}>\n      <NoteList notes={notes} onClick={handleOpenUpdate} onRemove={handleNoteRemove} />\n      {dialogType === DialogType.ADD && (\n        <NoteAddDialog initialText=\"\" onSubmit={handleNoteAdd} onCancel={handleCancel} />\n      )}\n      {dialogType === DialogType.UPDATE && currentNote !== null && (\n        <NoteAddDialog\n          initialText={currentNote.text}\n          onSubmit={handleNoteUpdate}\n          onCancel={handleCancel}\n        />\n      )}\n      <PrimaryButton onClick={handleOpenAdd}>Add</PrimaryButton>\n    </AppLayout>\n  );\n};\n\nconst NoteAddDialog: React.FunctionComponent<{\n  initialText: string;\n  onSubmit: (text: string) => void;\n  onCancel: () => void;\n}> = ({ initialText, onSubmit, onCancel }) => {\n  const [text, setText] = useState(initialText);\n\n  const handleChange = useCallback((event: React.FormEvent<HTMLTextAreaElement>) => {\n    const newText = event.currentTarget.value;\n    setText(newText);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(text);\n    setText('');\n  }, [text, onSubmit]);\n\n  const disabled = text === '';\n\n  return (\n    <Dialog className=\"NoteAddDialog\">\n      <DialogContent className=\"NoteAddDialog__content\">\n        <TextArea className=\"NoteAddDialog__text\" value={text} onChange={handleChange} />\n      </DialogContent>\n      <DialogActions className=\"NoteAddDialog__actions\">\n        <DefaultButton className=\"NoteAddDialog__button\" onClick={onCancel}>\n          Cancel\n        </DefaultButton>\n        <PrimaryButton className=\"NoteAddDialog__button\" disabled={disabled} onClick={handleSubmit}>\n          Add\n        </PrimaryButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst NoteList: React.FunctionComponent<{\n  notes: Note[];\n  onClick: (note: Note) => void;\n  onRemove: (noteId: string) => void;\n}> = ({ notes, onClick, onRemove }) => {\n  return (\n    <List className=\"NoteList\">\n      {notes.map(note => {\n        return <NoteView key={note.id} note={note} onClick={onClick} onRemove={onRemove} />;\n      })}\n    </List>\n  );\n};\n\nconst NoteView: React.FunctionComponent<{\n  note: Note;\n  onClick: (note: Note) => void;\n  onRemove: (noteId: string) => void;\n}> = ({ note, onClick, onRemove }) => {\n  const createdAt = useMemo(() => formatTime(note.createdAt), [note]);\n\n  const handleClick = useCallback(() => {\n    onClick(note);\n  }, [note, onClick]);\n\n  const handleRemove = useCallback(\n    (event: React.MouseEvent) => {\n      onRemove(note.id);\n      event.preventDefault();\n      event.stopPropagation();\n    },\n    [note, onRemove],\n  );\n\n  return (\n    <ListItem className=\"NoteView\" onClick={handleClick}>\n      <pre className=\"NoteView-text\">{note.text}</pre>\n      <p className=\"NoteView-created-at\">{createdAt}</p>\n      <SecondaryButton className=\"NoteView-remove\" onClick={handleRemove}>\n        Remove\n      </SecondaryButton>\n    </ListItem>\n  );\n};\n\nfunction formatTime(timestamp: number): string {\n  const date = new Date(timestamp);\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const d = date.getDate();\n  const h = date.getHours();\n  const m = date.getMinutes();\n  return `${year}-${pad2(month)}-${pad2(d)} ${pad2(h)}:${pad2(m)}`;\n}\n\nfunction pad2(n: number): string {\n  return n < 10 ? `0${n}` : `${n}`;\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  disabled?: boolean;\n  onClick: (event: React.MouseEvent) => void;\n}\n\nconst Button: React.FunctionComponent<Props> = ({ className, children, disabled, onClick }) => {\n  return (\n    <button className={classNames('Button', className)} disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport const DefaultButton: React.FunctionComponent<Props> = ({ className, ...props }) => {\n  return <Button className={classNames('DefaultButton', className)} {...props} />;\n};\n\nexport const PrimaryButton: React.FunctionComponent<Props> = ({ className, ...props }) => {\n  return <Button className={classNames('PrimaryButton', className)} {...props} />;\n};\n\nexport const SecondaryButton: React.FunctionComponent<Props> = ({ className, ...props }) => {\n  return <Button className={classNames('SecondaryButton', className)} {...props} />;\n};\n","import classNames from 'classnames';\nimport React, { HTMLProps } from 'react';\n\ninterface Props extends HTMLProps<HTMLInputElement> {\n  className?: string;\n}\n\nexport const List: React.FunctionComponent<Props> = ({ className, children, ...props }) => {\n  return (\n    <div {...props} className={classNames('List', className)}>\n      {children}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { HTMLProps } from 'react';\n\ninterface Props extends HTMLProps<HTMLInputElement> {\n  className?: string;\n}\n\nexport const ListItem: React.FunctionComponent<Props> = ({ className, children, ...props }) => {\n  return (\n    <div {...props} className={classNames('ListItem', className)}>\n      {children}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { HTMLProps } from 'react';\n\ninterface Props extends HTMLProps<HTMLTextAreaElement> {\n  className?: string;\n}\n\nexport const TextArea: React.FunctionComponent<Props> = ({ className, children, ...props }) => {\n  return (\n    <textarea {...props} className={classNames('TextArea', className)}>\n      {children}\n    </textarea>\n  );\n};\n","import classNames from 'classnames';\nimport React, { HTMLProps } from 'react';\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n  className?: string;\n}\n\nexport const Paper: React.FunctionComponent<Props> = ({ className, children, ...props }) => {\n  return (\n    <div {...props} className={classNames('Paper', className)}>\n      {children}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { HTMLProps } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Paper } from '../atoms/Paper';\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n  className?: string;\n}\n\nexport const DialogContent: React.FunctionComponent<Props> = ({\n  className,\n  children,\n  ...props\n}) => {\n  return (\n    <div {...props} className={classNames('DialogContent', className)}>\n      {children}\n    </div>\n  );\n};\n\nexport const DialogActions: React.FunctionComponent<Props> = ({\n  className,\n  children,\n  ...props\n}) => {\n  return (\n    <div {...props} className={classNames('DialogActions', className)}>\n      {children}\n    </div>\n  );\n};\n\nexport const Dialog: React.FunctionComponent<Props> = ({ className, children, ...props }) => {\n  return ReactDOM.createPortal(\n    <div className=\"Dialog__outer\">\n      <div className=\"Dialog__sheet\" />\n      <div className=\"Dialog__main-wrapper\">\n        <Paper {...props} className={classNames('Dialog__main', className)}>\n          {children}\n        </Paper>\n      </div>\n    </div>,\n    document.body,\n  );\n};\n","import React from 'react';\nimport { APP_NAME } from '../../constants';\nimport { User } from '../../types/UserType';\n\ninterface Props {\n  user: User | null;\n}\n\nexport const AppLayout: React.FunctionComponent<Props> = ({ user, children }) => {\n  return (\n    <div className=\"AppLayout\">\n      <header className=\"AppLayout__header\">\n        <p>{APP_NAME}</p>\n        {user !== null && <p>{user.displayName}</p>}\n      </header>\n      <main className=\"AppLayout__content\">{children}</main>\n    </div>\n  );\n};\n","export const APP_NAME = 'Memo';\n","import { ValueOf } from '../types/CommonType';\nimport { createReducer } from '../types/ReduxType';\nimport { State } from '../types/StateType';\nimport { Action, ActionType } from './actions';\n\nconst initialState: State = {\n  user: null,\n  notes: [],\n};\n\nexport const reducer = createReducer<State, ActionType, ValueOf<Action>>(initialState, {\n  [ActionType.USER_LOGIN_SUCCESS](state, { payload: { user } }) {\n    return { ...state, user };\n  },\n  [ActionType.USER_LOGOUT_SUCCESS](state) {\n    return { ...state, user: null };\n  },\n\n  [ActionType.NOTE_GET_ALL_SUCCESS](state, { payload: { notes } }) {\n    return { ...state, notes };\n  },\n  [ActionType.NOTE_ADD_SUCCESS](state, { payload: { note } }) {\n    return { ...state, notes: [note, ...state.notes] };\n  },\n  [ActionType.NOTE_UPDATE_SUCCESS](state, { payload: { note } }) {\n    const notes = state.notes.map(old => (old.id === note.id ? note : old));\n    return { ...state, notes };\n  },\n  [ActionType.NOTE_REMOVE_SUCCESS](state, { payload: { noteId } }) {\n    const notes = state.notes.filter(note => note.id !== noteId);\n    return { ...state, notes };\n  },\n});\n","import { AnyAction } from 'redux';\n\nexport type Action<Type extends string, Payload = void> = Payload extends void\n  ? { type: Type }\n  : { type: Type; payload: Payload };\n\nexport type Reducer<State, TAction extends Action<any, any>> = (\n  state: State,\n  action: TAction,\n) => State;\n\nexport type ReducerWithInitialState<State, TAction extends Action<any, any>> = (\n  state: State | undefined,\n  action: TAction,\n) => State;\n\ntype ReducerHandler<TState, TType extends string, TAction extends { type: TType }> = {\n  [Type in TType]?: TAction extends { type: Type } ? Reducer<TState, TAction> : never;\n};\nexport function createReducer<TState, TType extends string, TAction extends { type: TType }>(\n  initialState: TState,\n  handler: ReducerHandler<TState, TType, TAction>,\n  defaultReducer: ReducerWithInitialState<TState, TAction> = (state = initialState) => state,\n): ReducerWithInitialState<TState, TAction> {\n  const reducer: ReducerWithInitialState<TState, TAction> = (state = initialState, action) => {\n    const h = handler[action.type];\n    return h !== undefined ? h(state, action) : defaultReducer(state, action);\n  };\n  return reducer;\n}\n\nexport type Dispatch = (arg: AnyAction | ((...args: any[]) => unknown)) => any;\n\nexport type Selector<State, SelectedState> = (state: State) => SelectedState;\n\ntype ActionCreatorLike<ActionType> = (...args: any[]) => { type: ActionType; payload?: unknown };\ninterface ActionCreatorsLike<ActionType> {\n  [key: string]: ActionCreatorLike<ActionType>;\n}\nexport function createActionCreators<ActionType>() {\n  return <ActionCreators extends ActionCreatorsLike<ActionType>>(\n    v: ActionCreators,\n  ): ActionCreators => {\n    return v;\n  };\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: 'counter-64673.firebaseapp.com',\n  databaseURL: 'https://counter-64673.firebaseio.com',\n  projectId: 'counter-64673',\n  storageBucket: 'counter-64673.appspot.com',\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: '1:61000756567:web:5d923c067f28d0ab8c6212',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport { firebase };\n","import { getCurrentPositionFromGeoLocation } from '../utils/getCurrentPositionFromGeoLocation';\nimport { getCurrentTime } from '../utils/getCurrentTime';\nimport { Coordinate } from './CoordinateType';\nimport { Doc } from './DocType';\n\nexport interface Note {\n  id: string;\n  text: string;\n  authorId: string;\n  createdAt: number;\n  coordinate: Coordinate | null;\n}\n\nexport async function createNote(doc: Doc, authorId: string, text: string): Promise<Note> {\n  let coordinate: Coordinate | null = null;\n  try {\n    coordinate = await getCurrentPositionFromGeoLocation();\n  } catch (error) {}\n\n  return {\n    id: doc.id,\n    text,\n    authorId,\n    createdAt: getCurrentTime(),\n    coordinate,\n  };\n}\n","import { Coordinate } from '../types/CoordinateType';\n\nexport function getCurrentPositionFromGeoLocation(): Promise<Coordinate> {\n  return new Promise((resolve, reject) => {\n    return navigator.geolocation.getCurrentPosition(position => {\n      const coordinate: Coordinate = {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n      };\n      resolve(coordinate);\n    }, reject);\n  });\n}\n","export function getCurrentTime(): number {\n  return Date.now();\n}\n","import { eventChannel, EventChannel, SagaIterator } from 'redux-saga';\nimport {\n  all,\n  call,\n  CallEffect,\n  cancelled,\n  fork,\n  put,\n  select,\n  take,\n  takeEvery,\n  takeLatest,\n} from 'redux-saga/effects';\nimport { firebase } from '../firebase';\nimport { createNote, Note } from '../types/NoteType';\nimport { User } from '../types/UserType';\nimport { Action, actions, ActionType } from './actions';\nimport { selectors } from './selectors';\n\ntype EmptyUser = { _: 'EmptyUser' };\n\nconst emptyUser: EmptyUser = { _: 'EmptyUser' };\n\nfunction onAuthStateChanged(): EventChannel<firebase.User | EmptyUser> {\n  return eventChannel(emitter => {\n    return firebase.auth().onAuthStateChanged(user => {\n      emitter(user || emptyUser);\n    });\n  });\n}\n\nfunction onAuthStateChangedEffect(): CallEffect<EventChannel<firebase.User | EmptyUser>> {\n  return call(onAuthStateChanged);\n}\n\nfunction* userLoginSaga(): SagaIterator {\n  const provider = new firebase.auth.GoogleAuthProvider();\n  const auth = firebase.auth();\n  yield call([auth, auth.signInWithRedirect], provider);\n}\n\nfunction* userLogoutSaga(): SagaIterator {\n  const auth = firebase.auth();\n  yield call([auth, auth.signOut]);\n}\n\nfunction toUser(user: firebase.User): User {\n  return { id: user.uid, displayName: user.displayName };\n}\n\nfunction* watchUserStatusChangeSaga(): SagaIterator {\n  const chan = yield onAuthStateChangedEffect();\n  try {\n    while (true) {\n      const rawUser = yield take(chan);\n      if (rawUser !== emptyUser) {\n        const user = toUser(rawUser);\n        yield put(actions.USER_LOGIN_SUCCESS(user));\n        yield put(actions.NOTE_GET_ALL_REQUEST());\n      } else {\n        yield put(actions.USER_LOGOUT_SUCCESS());\n      }\n    }\n  } finally {\n    if (yield cancelled()) {\n      chan.close();\n    }\n  }\n}\n\nfunction* noteAddSaga({\n  payload: { text },\n}: Action[ActionType.NOTE_ADD_REQUEST]): SagaIterator<void> {\n  const user: User | null = yield select(selectors.user);\n  if (user === null) {\n    return;\n  }\n\n  const db = firebase.firestore();\n  const noteRef = db.collection('notes').doc();\n  const note = yield call(createNote, noteRef, user.id, text);\n  yield call([noteRef, noteRef.set], note);\n  yield put(actions.NOTE_ADD_SUCCESS(note));\n}\n\nfunction* noteUpdateSaga({\n  payload: { noteId, text },\n}: Action[ActionType.NOTE_UPDATE_REQUEST]): SagaIterator<void> {\n  const user: User | null = yield select(selectors.user);\n  if (user === null) {\n    return;\n  }\n\n  const db = firebase.firestore();\n  const noteRef = db.collection('notes').doc(noteId);\n  yield call([noteRef, noteRef.update], 'text', text);\n  const newNoteRef = yield call([noteRef, noteRef.get]);\n  const newNote = yield call([newNoteRef, newNoteRef.data]);\n  yield put(actions.NOTE_UPDATE_SUCCESS(newNote));\n}\n\nfunction* noteRemoveSaga({\n  payload: { noteId },\n}: Action[ActionType.NOTE_REMOVE_REQUEST]): SagaIterator<void> {\n  const user: User | null = yield select(selectors.user);\n  if (user === null) {\n    return;\n  }\n\n  const db = firebase.firestore();\n  const noteRef = db.collection('notes').doc(noteId);\n  yield call([noteRef, noteRef.delete]);\n  yield put(actions.NOTE_REMOVE_SUCCESS(noteId));\n}\n\nfunction* noteGetAllSaga(_: Action[ActionType.NOTE_GET_ALL_REQUEST]): SagaIterator<void> {\n  const user: User | null = yield select(selectors.user);\n  if (user === null) {\n    return;\n  }\n\n  const db = firebase.firestore();\n  const notesRef = db\n    .collection('notes')\n    .where('authorId', '==', user.id)\n    .orderBy('createdAt', 'desc');\n  const snapshot: firebase.firestore.QuerySnapshot = yield call([notesRef, notesRef.get]);\n  const notes = getAll<Note>(snapshot);\n  yield put(actions.NOTE_GET_ALL_SUCCESS(notes));\n}\n\nexport function* saga(): SagaIterator {\n  yield all([\n    takeLatest(ActionType.USER_LOGIN_REQUEST, userLoginSaga),\n    takeLatest(ActionType.USER_LOGOUT_REQUEST, userLogoutSaga),\n    takeLatest(ActionType.NOTE_GET_ALL_REQUEST, noteGetAllSaga),\n    takeEvery(ActionType.NOTE_ADD_REQUEST, noteAddSaga),\n    takeEvery(ActionType.NOTE_UPDATE_REQUEST, noteUpdateSaga),\n    takeEvery(ActionType.NOTE_REMOVE_REQUEST, noteRemoveSaga),\n    fork(watchUserStatusChangeSaga),\n  ]);\n}\n\nfunction getAll<T>(snapshot: firebase.firestore.QuerySnapshot): T[] {\n  const result: T[] = [];\n  snapshot.forEach(doc => {\n    result.push(doc.data() as T);\n    return result;\n  });\n  return result;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HomePage } from './components/pages/HomePage';\nimport { createStore } from './redux/store';\n\nfunction main() {\n  const store = createStore();\n\n  const rootElement = document.getElementById('root');\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <HomePage />\n    </Provider>,\n    rootElement,\n  );\n}\n\nmain();\n","import { applyMiddleware, compose, createStore as createReduxStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { reducer } from './reducer';\nimport { saga } from './saga';\n\nexport function createStore() {\n  const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createReduxStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\n  sagaMiddleware.run(saga);\n\n  return store;\n}\n"],"sourceRoot":""}